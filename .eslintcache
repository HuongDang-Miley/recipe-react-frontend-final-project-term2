[{"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/index.js":"1","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/App.js":"2","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/reportWebVitals.js":"3","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/recipePage/Ingredients.js":"4","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/recipePage/Recipe.js":"5","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/AllMeals.js":"6","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/nav/Nav.js":"7","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/recipePage/RecipeNav.js":"8","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/test/Test.js":"9","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/sort/Sort.js":"10","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/test/TestArrayFilter.js":"11","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/test/Search.js":"12","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/fav/Fav.js":"13","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/favButton/SmallFavButton.js":"14","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/MealThumb.js":"15","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/MealModule.js":"16","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/share/Message.js":"17","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/AllMeals2.js":"18"},{"size":500,"mtime":1606858807709,"results":"19","hashOfConfig":"20"},{"size":2564,"mtime":1607065315554,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1606858807711,"results":"22","hashOfConfig":"20"},{"size":0,"mtime":1606883032557,"results":"23","hashOfConfig":"20"},{"size":3891,"mtime":1606968446537,"results":"24","hashOfConfig":"20"},{"size":7000,"mtime":1607065094805,"results":"25","hashOfConfig":"20"},{"size":723,"mtime":1607052379239,"results":"26","hashOfConfig":"20"},{"size":404,"mtime":1606936320050,"results":"27","hashOfConfig":"20"},{"size":1594,"mtime":1607030482638,"results":"28","hashOfConfig":"20"},{"size":2933,"mtime":1607039330501,"results":"29","hashOfConfig":"20"},{"size":3181,"mtime":1607047296366,"results":"30","hashOfConfig":"20"},{"size":232,"mtime":1607046550966,"results":"31","hashOfConfig":"20"},{"size":965,"mtime":1607065436775,"results":"32","hashOfConfig":"20"},{"size":1012,"mtime":1607063506745,"results":"33","hashOfConfig":"20"},{"size":838,"mtime":1607063539888,"results":"34","hashOfConfig":"20"},{"size":2071,"mtime":1607063553415,"results":"35","hashOfConfig":"20"},{"size":205,"mtime":1607064212236,"results":"36","hashOfConfig":"20"},{"size":837,"mtime":1607065258878,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6t9950",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/index.js",[],["80","81"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/App.js",["82"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/reportWebVitals.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/recipePage/Ingredients.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/recipePage/Recipe.js",["83","84","85","86"],"// import './App.css';\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport './recipe.css'\nimport RecipeNav from './RecipeNav'\n\nexport default class Recipe extends Component {\n  state = {\n    id: '',\n    ingredients: []\n  }\n\n  componentDidMount = async () => {\n    let recipeId = this.props.location.state.id\n    try {\n      let result = await axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipeId}`,\n      // let result = await axios.get('https://www.themealdb.com/api/json/v1/1/random.php',\n        {\n          headers: { Accept: \"application/json, text/plain, */*\" }\n        }\n      )\n\n      let meal = result.data.meals[0]\n      console.log('meal', meal)\n      this.setState({\n        id: meal.idMeal,\n        area: meal.strArea,\n        category: meal.strCategory,\n        instructions: meal.strInstructions,\n        name: meal.strMeal,\n        img: meal.strMealThumb,\n        tags: meal.strTags,\n        video: meal.strYoutube,\n        source: meal.strSource,\n        ingredients: [\n          meal.strIngredient1,\n          meal.strIngredient2,\n          meal.strIngredient3,\n          meal.strIngredient4,\n          meal.strIngredient5,\n          meal.strIngredient6,\n          meal.strIngredient7,\n          meal.strIngredient8,\n          meal.strIngredient9,\n          meal.strIngredient10,\n          meal.strIngredient11,\n          meal.strIngredient12,\n          meal.strIngredient13,\n          meal.strIngredient14,\n          meal.strIngredient15,\n          meal.strIngredient16,\n          meal.strIngredient17,\n          meal.strIngredient18,\n          meal.strIngredient19,\n          meal.strIngredient20,\n        ]\n      }, () => {\n        console.log('state in line 58', this.state)\n      })\n\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\nconsole.log('this is from line 66', this.props.location)\n    const { id, area, category, ingredients, instructions, name, img, tags, video, source } = this.state\n    return (\n      <>\n        <RecipeNav />\n        <div>\n          <div id=\"recipe-div\">\n            <div id='header'>\n              <h1>{name}</h1>\n              <div id='video-info-wrapper'>\n                <iframe\n\n                  src=\"https://www.youtube.com/embed/WUpaOGghOdo\"\n                  frameborder=\"0\"\n                  poster={img}\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n                </iframe>\n                <ul id=\"info\">\n                  <button className=\"add-to-favorites-button\">Add To Favorites</button>\n                  <li className=\"info-list\">Tags: {tags}</li>\n                  <li className=\"info-list\">Country: {area}</li>\n                  <li className=\"info-list\">Catergory: {category}</li>\n                  <li className=\"info-list\">Source: <a className= 'recipe-link' href={source}>Link</a>\n                  </li>\n                </ul>\n\n              </div>\n\n\n            </div>\n            <div id='ingredients'>\n              <h2>Ingredients</h2>\n              <div className='ingredient-and-instruction-wrapper'>\n                <p className='instruction-paragraph'>\n                  {ingredients.length !== 0\n                    ? (ingredients.map(item => { if (item !== '' && item !== null) { return (<li>{item}</li>) } }))\n                    : \"\"}\n                </p>\n              </div>\n            </div>\n            <div id='instruction'>\n              <h2>Instruction</h2>\n              <div className='ingredient-and-instruction-wrapper'>\n                <p className='instruction-paragraph'>{instructions}</p>\n              </div>\n            </div>\n          </div>\n          <div id='footer'>\n            © 2020 Code Immersives - Final Project Term2 By Miley <br />\n            All rights reserved.\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/AllMeals.js",["87","88","89","90","91","92"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport Meal from './MealModule'\nimport './allMeals.css'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport Sort from '../sort/Sort'\nimport Test from '../test/Test'\nimport TestArrayFilter from '../test/TestArrayFilter'\nimport Search from '../test/Search'\n\nexport default class AllMeals extends Component {\n    state = {\n        favorites: [],\n        meals: [],\n        sort: false,\n        parentName: 'Huong',\n        parentChange: false,\n        childName: 'childName',\n        parentArray: [\n            { meat: 'beef', name: 'beef0 stir fir' },\n            { meat: 'chicken', name: 'chicken stir fry' },\n            { meat: 'pork', name: 'porkchop' },\n            { meat: 'beef', name: 'beef4 stir fir' },\n            { meat: 'beef', name: 'beef3stir fir' },\n            { meat: 'chicken', name: 'stewed chicken thigh ' },\n            { meat: 'beef', name: 'beef1 stir fir' },\n            { meat: 'beef', name: 'beef2 stir fir' },\n        ],\n        sortedArray: []\n\n    }\n    componentDidMount = async () => {\n        let latestMeals = await axios.get('https://themealdb.p.rapidapi.com/randomselection.php', {\n            headers: {\n                'x-rapidapi-key': '1eccb1fd0fmsh1264571b8ded970p1f1396jsn3b376a8754cf',\n                'x-rapidapi-host': 'themealdb.p.rapidapi.com',\n                useQueryString: true\n            }\n        })\n        let latestMeals2 = await axios.get('https://themealdb.p.rapidapi.com/randomselection.php', {\n            headers: {\n                'x-rapidapi-key': '1eccb1fd0fmsh1264571b8ded970p1f1396jsn3b376a8754cf',\n                'x-rapidapi-host': 'themealdb.p.rapidapi.com',\n                useQueryString: true\n            }\n        })\n        let latestMeals3 = await axios.get('https://themealdb.p.rapidapi.com/randomselection.php', {\n            headers: {\n                'x-rapidapi-key': '1eccb1fd0fmsh1264571b8ded970p1f1396jsn3b376a8754cf',\n                'x-rapidapi-host': 'themealdb.p.rapidapi.com',\n                useQueryString: true\n            }\n        })\n\n        latestMeals.data.meals.map(item => {\n            item.like = false\n            return item\n        })\n        latestMeals2.data.meals.map(item => {\n            item.like = false\n            return item\n        })\n        latestMeals3.data.meals.map(item => {\n            item.like = false\n            return item\n        })\n\n        let combinedMeals = [...latestMeals.data.meals, ...latestMeals2.data.meals, ...latestMeals3.data.meals]\n        this.setState({\n            meals: combinedMeals\n        })\n    }\n\n    sortMeal = (mealsArray) => {\n        this.setState({\n            meals: mealsArray,\n            sort: true\n        })\n        console.log(mealsArray)\n    }\n\n    addToFavorites = (meal) => {\n        if (meal.like === true) {\n            meal.like = false\n        } else {\n            meal.like = true\n        }\n    }\n\n    // testChangeName = (childName, childChange) => {\n    //     console.log('before setState ======')\n    //     console.log('parentChange',this.state.parentChange, 'parentName', this.state.parentName )\n    //   console.log('child change', childChange, 'childName',childName)\n    //     this.setState({\n    //         childName: childName,\n    //         parentChange: childChange,\n    //     }, ()=> {\n    //         console.log('parentChange',this.state.parentChange, 'parentName', this.state.parentName )\n    //         console.log('after setState ======')\n    //         console.log('child change', childChange, 'childName',childName)\n\n    //     })\n    // }\n    testChangeArray = (sortedArray, sortChange) => {\n        console.log('before setState ======')\n        console.log('parentChange', this.state.parentChange, 'parentName', this.state.parentName)\n        console.log('sortChange', sortChange, 'sortedArray', sortedArray)\n        this.setState({\n            sortedArray: sortedArray,\n            parentChange: sortChange,\n        }, () => {\n            console.log('parentChange', this.state.parentChange, 'parentArray', this.state.parentArray)\n            console.log('after setState ======')\n            console.log('sortChange', sortChange, 'sortedArray', sortedArray)\n\n        })\n    }\n\n\n\n    render() {\n        console.log(this.state.meals)\n        const { meals, sort } = this.state\n        return (\n            <>\n                <div id='all-meals-wrapper-wrapper'>\n                    <Sort data={{\n                        state: this.state,\n                        sortMeal: this.sortMeal.bind(this)\n                    }} />\n\n                    {/* {this.state.parentChange\n                        ? (<h1>sorted Array will b here</h1>)\n                        : (<h1>Parent Array</h1>)\n                    } */}\n                    {/* <TestArrayFilter\n                        data={{\n                            parentArray: this.state.parentArray,\n                            parentChange: this.state.parentChange,\n                            testChangeName: this.testChangeArray.bind(this)\n                        }}\n                    />\n\n                \n                    <Search\n                        data={{\n                            meals: this.state.meals,\n                            sortMeal: this.sortMeal.bind(this)\n                        }}\n                    /> */}\n\n                    {sort ? (<p>'sort is click'</p>) : ''}\n                    <div id='all-meals-wrapper' >\n                        {meals.length !== 0\n                            // ? (meals.map(({ idMeal, strMeal, strCategory, strMealThumb }) => (\n                            ? (meals.map((meal) => (\n                                <li key={meal.idMeal} className={'meal-module'}\n                                >\n                                    <Link className={'meal-module-link'} to={{ pathname: '/recipe', state: { id: meal.idMeal } }}>\n                                        <Meal\n                                            data={{\n                                                state: this.state,\n                                                meal: meal,\n                                                addToFavorites: this.addToFavorites\n                                            }}\n\n                                        />\n                                        {/* <Meal\n                                            id={idMeal}\n                                            name={strMeal}\n                                            category={strCategory}\n                                            img={strMealThumb}\n                                        /> */}\n                                    </Link>\n                                    <p onClick={() => this.addToFavorites(meal)} class='add-to-favorite'>Favorite</p>\n                                </li>)))\n                            : ''}\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/nav/Nav.js",["93"],"import Axios from 'axios'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './nav.css'\n\n\nexport default class Nav extends Component {\n\n\n    render() {\n        return (\n            <div id='shared-nav' className='white-nav'>\n                <span className='first-link'>\n                    <Link className={'nav-link'} to='/all' >All Recipes</Link>\n                </span>\n                <span>\n                    <Link className=\"nav-link\" to='/favorites'>Favorites</Link>\n                </span>\n                <span className=\"sort-button\">\n                    <Link className=\"back-link\" to='/'>Sort Recipes</Link>\n                </span>\n\n            </div>\n        )\n    }\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/recipePage/RecipeNav.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/test/Test.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/sort/Sort.js",["94","95"],"import Axios from 'axios'\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport './sort.css'\nexport default class Sort extends Component {\n    state = {\n        categories: [],\n        sortedMeals: []\n    }\n\n    componentDidMount = async () => {\n        let success = await axios.get('https://www.themealdb.com/api/json/v1/1/categories.php')\n        let arrayObj = success.data.categories\n        let newArr = arrayObj.map(item => item.strCategory)\n        this.setState({\n            categories: newArr\n        })\n    }\n\n    filterCategory = (category) => {\n        console.log(category)\n        console.log('this props', this.props)\n        let allMeals = this.props.data.state.meals\n        console.log('allMeal', allMeals)\n        let sortedMeals = allMeals.filter((meal) => { if (meal.strCategory === category) { return meal } })\n        this.setState({\n            sortedMeals: sortedMeals,\n        })\n\n    }\n\n    render() {\n        const [ Dessert, Beef, Chicken, Lamb, Miscellaneous, Pasta, Pork, Seafood, Side, Starter, Vegetarian, Vegan, Breakfast, Goat ] = this.state.categories\n        return (\n            <div id='categories-list-wrapper'>\n                <br /><span className=\"sort-title\">Include Meal Type:</span>\n                <span onClick={()=>this.filterCategory(Breakfast)} className='category-span'>{Breakfast}</span>\n                <span onClick={()=>this.filterCategory(Starter)} className='category-span'>{Starter}</span>\n                <span onClick={()=>this.filterCategory(Side)} className='category-span'>{Side}</span>\n                <span onClick={()=>this.filterCategory(Dessert)} className='category-span'>{Dessert}</span>\n                <br /><span className=\"sort-title\">Include Protein:</span>\n                <span onClick={()=>this.filterCategory(Beef)} className='category-span'>{Beef}</span>\n                <span onClick={()=>this.filterCategory(Chicken)} className='category-span'>{Chicken}</span>\n                <span onClick={()=>this.filterCategory(Lamb)} className='category-span'>{Lamb}</span>\n                <span onClick={()=>this.filterCategory(Pork)} className='category-span'>{Pork}</span>\n                <span onClick={()=>this.filterCategory(Seafood)} className='category-span'>{Seafood}</span>\n                <span onClick={()=>this.filterCategory(Goat)} className='category-span'>{Goat}</span>\n                <br /><span className=\"sort-title\">Include Others:</span>\n                <span onClick={()=>this.filterCategory(Vegetarian)} className='category-span'>{Vegetarian}</span>\n                <span onClick={()=>this.filterCategory(Vegan)} className='category-span'>{Vegan}</span>\n                <span onClick={()=>this.filterCategory(Miscellaneous)} className='category-span'>{Miscellaneous}</span>\n                <span onClick={()=>this.filterCategory(Pasta)} className='category-span'>{Pasta}</span>\n            </div>\n        )\n    }\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/test/TestArrayFilter.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/test/Search.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/fav/Fav.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/favButton/SmallFavButton.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/MealThumb.js",["96"],"import React, { Component } from 'react'\n\nexport default class MealThumb extends Component {\n\n    handleOnClickMealModule = (id) => {\n        console.log('a click from Meal', id)\n        console.log(this.props.history)\n        this.props.history.push('/recipe')\n    }\n\n    render() {\n        const {strCategory, strMeal, strMealThumb } = this.props.meals\n        return (\n            <>\n            <div id='meal-module-wrapper'>\n                <p className='meal-module-category'>{strCategory.toUpperCase()}</p>\n                <div className='name-and-img-wrapper'>\n                    <div className='meal-module-name'>\n                        {strMeal}\n                    </div>\n                    <img className='meal-module-image' src={strMealThumb} />\n                </div>\n            </div>\n            </>\n        )\n    }\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/MealModule.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/share/Message.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-9/recipe-react-frontend-final-project-term2/src/components/allMeals/AllMeals2.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":69,"column":13,"nodeType":"103","messageId":"104","endLine":69,"endColumn":15},{"ruleId":"101","severity":1,"message":"106","line":69,"column":77,"nodeType":"103","messageId":"104","endLine":69,"endColumn":82},{"ruleId":"107","severity":1,"message":"108","line":78,"column":17,"nodeType":"109","endLine":83,"endColumn":132},{"ruleId":"110","severity":1,"message":"111","line":103,"column":45,"nodeType":"112","messageId":"113","endLine":103,"endColumn":47},{"ruleId":"101","severity":1,"message":"114","line":5,"column":27,"nodeType":"103","messageId":"104","endLine":5,"endColumn":33},{"ruleId":"101","severity":1,"message":"115","line":5,"column":35,"nodeType":"103","messageId":"104","endLine":5,"endColumn":40},{"ruleId":"101","severity":1,"message":"116","line":5,"column":42,"nodeType":"103","messageId":"104","endLine":5,"endColumn":48},{"ruleId":"101","severity":1,"message":"117","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":12},{"ruleId":"101","severity":1,"message":"118","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":23},{"ruleId":"101","severity":1,"message":"119","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":14},{"ruleId":"101","severity":1,"message":"120","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"120","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"121","line":25,"column":50,"nodeType":"112","messageId":"113","endLine":25,"endColumn":52},{"ruleId":"122","severity":1,"message":"123","line":21,"column":21,"nodeType":"109","endLine":21,"endColumn":77},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'AllMeals' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'video' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Test' is defined but never used.","'TestArrayFilter' is defined but never used.","'Search' is defined but never used.","'Axios' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]